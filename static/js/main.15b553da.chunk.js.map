{"version":3,"sources":["Components/SearchForm.js","Components/Gif.js","Components/NoGifs.js","Components/GifList.js","App.js","index.js"],"names":["SearchForm","state","searchText","onSearchChange","e","_this","setState","target","value","handleSubmit","preventDefault","props","onSearch","query","currentTarget","reset","_this2","this","react_default","a","createElement","className","onSubmit","htmlFor","type","onChange","name","ref","input","placeholder","id","Component","Gif","src","url","alt","NoGifs","GifList","gifs","results","data","length","map","gif","Components_Gif","images","fixed_height","key","Components_NoGifs","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","performSearch","arguments","undefined","axios","get","concat","then","response","loading","catch","error","console","log","SearchForm_SearchForm","Components_GifList","ReactDOM","render","App_App","document","getElementById"],"mappings":"0PAEqBA,6MAEnBC,MAAQ,CACNC,WAAY,MAGdC,eAAiB,SAAAC,GACfC,EAAKC,SAAS,CAAEJ,WAAYE,EAAEG,OAAOC,WAGvCC,aAAe,SAAAL,GACbA,EAAEM,iBACFL,EAAKM,MAAMC,SAASP,EAAKQ,MAAML,OAC/BJ,EAAEU,cAAcC,iFAGT,IAAAC,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcC,SAAUL,KAAKR,cAC3CS,EAAAC,EAAAC,cAAA,SAAOC,UAAU,YAAYE,QAAQ,UAArC,UACAL,EAAAC,EAAAC,cAAA,SAAOI,KAAK,SACLC,SAAUR,KAAKd,eACfuB,KAAK,SACLC,IAAK,SAACC,GAAD,OAAWZ,EAAKH,MAAQe,GAC7BC,YAAY,cACnBX,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAASM,GAAG,SAAST,UAAU,iBAAgBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6BAAb,mBAzB5BU,aCMzBC,EANH,SAAArB,GAAK,OACfO,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,OAAKa,IAAKtB,EAAMuB,IAAKC,IAAI,OCKdC,EAPA,SAAAzB,GAAK,OAClBO,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WACZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAAb,+BACAH,EAAAC,EAAAC,cAAA,iDCgBWiB,EAjBC,SAAA1B,GAEd,IACI2B,EADEC,EAAU5B,EAAM6B,KAQtB,OALEF,EADEC,EAAQE,OACHF,EAAQG,IAAI,SAAAC,GAAG,OAAIzB,EAAAC,EAAAC,cAACwB,EAAD,CAAKV,IAAKS,EAAIE,OAAOC,aAAaZ,IAAKa,IAAKJ,EAAIb,OAEnEZ,EAAAC,EAAAC,cAAC4B,EAAD,MAIP9B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACXiB,ICVcW,cAEnB,SAAAA,IAAc,IAAA5C,EAAA,OAAA6C,OAAAC,EAAA,EAAAD,CAAAjC,KAAAgC,IACZ5C,EAAA6C,OAAAE,EAAA,EAAAF,CAAAjC,KAAAiC,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAArC,QAWFsC,cAAgB,WAAoB,IAAnB1C,EAAmB2C,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAX,OACvBE,IAAMC,IAAN,yCAAAC,OAAmD/C,EAAnD,oCACGgD,KAAK,SAAAC,GACJzD,EAAKC,SAAS,CACZgC,KAAMwB,EAAStB,KAAKA,KACpBuB,SAAS,MAGZC,MAAM,SAAAC,GACLC,QAAQC,IAAI,kCAAmCF,MAnBnD5D,EAAKJ,MAAQ,CACXqC,KAAM,GACNyB,SAAS,GAJC1D,mFASZY,KAAKsC,iDAkBL,OADAW,QAAQC,IAAIlD,KAAKhB,MAAMqC,MAErBpB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,aACAH,EAAAC,EAAAC,cAACgD,EAAD,CAAYxD,SAAUK,KAAKsC,kBAG/BrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEVJ,KAAKhB,MAAM8D,QACT7C,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACiD,EAAD,CAAS7B,KAAMvB,KAAKhB,MAAMqC,gBAzCRP,aCFjCuC,IAASC,OACPrD,EAAAC,EAAAC,cAACoD,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.15b553da.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class SearchForm extends Component {\n  \n  state = {\n    searchText: ''\n  }\n  \n  onSearchChange = e => {\n    this.setState({ searchText: e.target.value });\n  }\n  \n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSearch(this.query.value);\n    e.currentTarget.reset();\n  }\n  \n  render() {  \n    return (\n      <form className=\"search-form\" onSubmit={this.handleSubmit} >\n        <label className=\"is-hidden\" htmlFor=\"search\">Search</label>\n        <input type=\"search\" \n               onChange={this.onSearchChange}\n               name=\"search\" \n               ref={(input) => this.query = input}\n               placeholder=\"Search...\" />\n        <button type=\"submit\" id=\"submit\" className=\"search-button\"><i className=\"material-icons icn-search\">search</i></button>\n      </form>      \n    );\n  }\n}","import React from 'react';\n\nconst Gif = props => (\n  <li className=\"gif-wrap\">\n    <img src={props.url} alt=\"\"/>\n  </li>\n);\n\nexport default Gif;","import React from 'react';\n\nconst NoGifs = props => (\n  <li className='no-gifs'>\n    <i className=\"material-icons icon-gif\">sentiment_very_dissatisfied</i>\n    <h3>Sorry, no GIFs match your search.</h3>\n  </li>\n);\n\nexport default NoGifs;","import React from 'react';\nimport Gif from './Gif';\nimport NoGifs from './NoGifs';\n\nconst GifList = props => { \n  \n  const results = props.data;\n  let gifs;\n  if (results.length) {\n    gifs = results.map(gif => <Gif url={gif.images.fixed_height.url} key={gif.id} />);    \n  } else {\n    gifs = <NoGifs />\n  }\n\n  return(\n    <ul className=\"gif-list\">\n      {gifs}\n    </ul> \n  );\n}\n\nexport default GifList;\n","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport SearchForm from './Components/SearchForm';\nimport GifList from './Components/GifList';\n\nexport default class App extends Component {\n  \n  constructor() {\n    super();\n    this.state = {\n      gifs: [],\n      loading: true\n    };\n  } \n\n  componentDidMount() {\n    this.performSearch();\n  }\n  \n  performSearch = (query = 'cats') => {\n    axios.get(`http://api.giphy.com/v1/gifs/search?q=${query}&limit=24&api_key=dc6zaTOxFJmzC`)\n      .then(response => {\n        this.setState({\n          gifs: response.data.data,\n          loading: false\n        });\n      })\n      .catch(error => {\n        console.log('Error fetching and parsing data', error);\n      });    \n  }\n  \n  render() { \n    console.log(this.state.gifs);\n    return (\n      <div>\n        <div className=\"main-header\">\n          <div className=\"inner\">\n            <h1 className=\"main-title\">GifSearch</h1>\n            <SearchForm onSearch={this.performSearch} />      \n          </div>   \n        </div>    \n        <div className=\"main-content\">\n          {\n            (this.state.loading)\n             ? <p>Loading...</p>\n             : <GifList data={this.state.gifs} />\n          }          \n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}